---
- hosts: localhost
  vars:
    sec_group_rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0

  tasks:
    - name: "Create security group"
      ec2_group:
        name: "webserver-sg"
        description: "Webserver Security Group"
        region: "us-east-1"
        rules: "{{ sec_group_rules }}"
        vpc_id: "vpc-0745e30a682f50fae"
      register: webserver_security_group

    - name: launch load balancer
      ec2_elb_lb:
        name: "webserver-lb"
        region: "us-east-1"
        state: present
        subnets: ['subnet-003e347491497dab0']
        security_group_ids: "{{ webserver_security_group.group_id }}"
        connection_draining_timeout: 60
        listeners:
         - protocol: http
           load_balancer_port: 80
           instance_port: 80
        health_check:
           ping_protocol: http
           ping_port: 80
           ping_path: "/"
           response_timeout: 5
           interval: 30
           unhealthy_threshold: 5
           healthy_threshold: 5

    - name: create launch config
      ec2_lc:
        name: "webserver-lc"
        image_id: "ami-0b5eea76982371e91"
        key_name: "webserver"
        region: "us-east-1"
        security_groups: "{{ webserver_security_group.group_id }}"
        instance_type: "t2.micro"

    - name: create autoscale groups
      ec2_asg:
        name: "webserver-asg"
        load_balancers: ["webserver-lb"]
        launch_config_name: "webserver-lc"
        min_size: "1"
        max_size: "3"
        desired_capacity: "1"
        region: "us-east-1"
        vpc_zone_identifier: ["subnet-003e347491497dab0"]

    - name: create scale down  policy
      ec2_scaling_policy:
        state: present
        region: "us-east-1"
        name: scale-down-policy
        adjustment_type: ChangeInCapacity
        asg_name: "webserver-asg"
        scaling_adjustment: -1
        min_adjustment_step: -1
        cooldown: 300
      register: scale_down_policy

    - name: create scale up policy
      ec2_scaling_policy:
        state: present
        region: "us-east-1"
        name: scale-up-policy
        adjustment_type: ChangeInCapacity
        asg_name: "webserver-asg"
        scaling_adjustment: 1
        min_adjustment_step: 1
        cooldown: 300
      register: scale_up_policy

    - name: create scale down alarm
      ec2_metric_alarm:
        state: present
        region: "us-east-1"
        name: "cpu-low"
        metric: CPUUtilization
        namespace: "AWS/EC2"
        statistic: Average
        comparison: "<="
        threshold: 5.0
        period: 300
        evaluation_periods: 3
        unit: "Percent"
        description: "This will alarm when cpu usage average is lower than 5% for 15 minutes "
        dimensions:
          AutoScalingGroupName: "webserver-asg"
        alarm_actions:
          - "{{ scale_down_policy.arn }}"

    - name: create scale up alarm
      ec2_metric_alarm:
        state: present
        region: "us-east-1"
        name: "cpu-up"
        metric: CPUUtilization
        namespace: "AWS/EC2"
        statistic: Average
        comparison: ">="
        threshold: 90.0
        period: 300
        evaluation_periods: 3
        unit: "Percent"
        description: "This will alarm when cpu usage average is higher than 90% for 15 minutes"
        dimensions:
           AutoScalingGroupName: "webserver-asg"
        alarm_actions:
          - "{{ scale_up_policy.arn }}"
